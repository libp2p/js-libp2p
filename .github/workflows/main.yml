name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

env:
  CACHE_DIRS: |
    ./interop/dist
    ./interop/node_modules
    ./doc/node_modules

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@main
        with:
          directories: ${{ env.CACHE_DIRS }}

  test-firefox:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@main
        with:
          directories: ${{ env.CACHE_DIRS }}
      - run: cd packages/integration-tests && npm run --if-present test:firefox -- --grep 'WebRTC '
      - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          flags: firefox
          files: .coverage/*,packages/*/.coverage/*
          token: ${{ secrets.CODECOV_TOKEN }}

  test-firefox-webworker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: ipfs/aegir/actions/cache-node-modules@main
        with:
          directories: ${{ env.CACHE_DIRS }}
      - run: cd packages/integration-tests && npm run --if-present test:firefox-webworker -- --grep 'WebRTC '
      - uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          flags: firefox-webworker
          files: .coverage/*,packages/*/.coverage/*
          token: ${{ secrets.CODECOV_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: [
      test-firefox,
      test-firefox-webworker,
    ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.UCI_GITHUB_TOKEN || github.token }}
          manifest-file: .release-please-manifest.json
          config-file: .release-please.json
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      - uses: ipfs/aegir/actions/cache-node-modules@main
        with:
          directories: ${{ env.CACHE_DIRS }}
      - uses: ipfs/aegir/actions/docker-login@main
        with:
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          docker-username: ${{ secrets.DOCKER_USERNAME }}
      - if: ${{ steps.release.outputs.releases_created == 'true' }}
        name: Run release version
        run: |
          git update-index --assume-unchanged packages/libp2p/src/version.ts
          npm run --if-present release
        env:
          GITHUB_TOKEN: ${{ secrets.UCI_GITHUB_TOKEN || github.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - if: ${{ steps.release.outputs.releases_created != 'true' }}
        name: Run release rc
        run: |
            git update-index --assume-unchanged packages/libp2p/src/version.ts
            npm run --if-present release:rc
        env:
          GITHUB_TOKEN: ${{ secrets.UCI_GITHUB_TOKEN || github.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
